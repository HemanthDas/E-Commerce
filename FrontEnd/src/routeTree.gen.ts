/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CartIndexImport } from './routes/cart/index'
import { Route as ProductProductIdImport } from './routes/product/$productId'
import { Route as AuthenticationRegisterImport } from './routes/authentication/register'
import { Route as AuthenticationLoginImport } from './routes/authentication/login'
import { Route as UserAddressIndexImport } from './routes/user/address/index'
import { Route as UserAddressAddAddressImport } from './routes/user/address/add-address'
import { Route as UserAddressAddressImport } from './routes/user/address/$address'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const UserProfileLazyImport = createFileRoute('/user/profile')()
const UserCartLazyImport = createFileRoute('/user/cart')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const CartIndexRoute = CartIndexImport.update({
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any)

const UserProfileLazyRoute = UserProfileLazyImport.update({
  path: '/user/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/user/profile.lazy').then((d) => d.Route))

const UserCartLazyRoute = UserCartLazyImport.update({
  path: '/user/cart',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/user/cart.lazy').then((d) => d.Route))

const ProductProductIdRoute = ProductProductIdImport.update({
  path: '/product/$productId',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationRegisterRoute = AuthenticationRegisterImport.update({
  path: '/authentication/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationLoginRoute = AuthenticationLoginImport.update({
  path: '/authentication/login',
  getParentRoute: () => rootRoute,
} as any)

const UserAddressIndexRoute = UserAddressIndexImport.update({
  path: '/user/address/',
  getParentRoute: () => rootRoute,
} as any)

const UserAddressAddAddressRoute = UserAddressAddAddressImport.update({
  path: '/user/address/add-address',
  getParentRoute: () => rootRoute,
} as any)

const UserAddressAddressRoute = UserAddressAddressImport.update({
  path: '/user/address/$address',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/authentication/login': {
      id: '/authentication/login'
      path: '/authentication/login'
      fullPath: '/authentication/login'
      preLoaderRoute: typeof AuthenticationLoginImport
      parentRoute: typeof rootRoute
    }
    '/authentication/register': {
      id: '/authentication/register'
      path: '/authentication/register'
      fullPath: '/authentication/register'
      preLoaderRoute: typeof AuthenticationRegisterImport
      parentRoute: typeof rootRoute
    }
    '/product/$productId': {
      id: '/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof ProductProductIdImport
      parentRoute: typeof rootRoute
    }
    '/user/cart': {
      id: '/user/cart'
      path: '/user/cart'
      fullPath: '/user/cart'
      preLoaderRoute: typeof UserCartLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/profile': {
      id: '/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof UserProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof rootRoute
    }
    '/user/address/$address': {
      id: '/user/address/$address'
      path: '/user/address/$address'
      fullPath: '/user/address/$address'
      preLoaderRoute: typeof UserAddressAddressImport
      parentRoute: typeof rootRoute
    }
    '/user/address/add-address': {
      id: '/user/address/add-address'
      path: '/user/address/add-address'
      fullPath: '/user/address/add-address'
      preLoaderRoute: typeof UserAddressAddAddressImport
      parentRoute: typeof rootRoute
    }
    '/user/address/': {
      id: '/user/address/'
      path: '/user/address'
      fullPath: '/user/address'
      preLoaderRoute: typeof UserAddressIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/authentication/login': typeof AuthenticationLoginRoute
  '/authentication/register': typeof AuthenticationRegisterRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/user/cart': typeof UserCartLazyRoute
  '/user/profile': typeof UserProfileLazyRoute
  '/cart': typeof CartIndexRoute
  '/user/address/$address': typeof UserAddressAddressRoute
  '/user/address/add-address': typeof UserAddressAddAddressRoute
  '/user/address': typeof UserAddressIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/authentication/login': typeof AuthenticationLoginRoute
  '/authentication/register': typeof AuthenticationRegisterRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/user/cart': typeof UserCartLazyRoute
  '/user/profile': typeof UserProfileLazyRoute
  '/cart': typeof CartIndexRoute
  '/user/address/$address': typeof UserAddressAddressRoute
  '/user/address/add-address': typeof UserAddressAddAddressRoute
  '/user/address': typeof UserAddressIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/authentication/login': typeof AuthenticationLoginRoute
  '/authentication/register': typeof AuthenticationRegisterRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/user/cart': typeof UserCartLazyRoute
  '/user/profile': typeof UserProfileLazyRoute
  '/cart/': typeof CartIndexRoute
  '/user/address/$address': typeof UserAddressAddressRoute
  '/user/address/add-address': typeof UserAddressAddAddressRoute
  '/user/address/': typeof UserAddressIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/authentication/login'
    | '/authentication/register'
    | '/product/$productId'
    | '/user/cart'
    | '/user/profile'
    | '/cart'
    | '/user/address/$address'
    | '/user/address/add-address'
    | '/user/address'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/authentication/login'
    | '/authentication/register'
    | '/product/$productId'
    | '/user/cart'
    | '/user/profile'
    | '/cart'
    | '/user/address/$address'
    | '/user/address/add-address'
    | '/user/address'
  id:
    | '__root__'
    | '/'
    | '/authentication/login'
    | '/authentication/register'
    | '/product/$productId'
    | '/user/cart'
    | '/user/profile'
    | '/cart/'
    | '/user/address/$address'
    | '/user/address/add-address'
    | '/user/address/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthenticationLoginRoute: typeof AuthenticationLoginRoute
  AuthenticationRegisterRoute: typeof AuthenticationRegisterRoute
  ProductProductIdRoute: typeof ProductProductIdRoute
  UserCartLazyRoute: typeof UserCartLazyRoute
  UserProfileLazyRoute: typeof UserProfileLazyRoute
  CartIndexRoute: typeof CartIndexRoute
  UserAddressAddressRoute: typeof UserAddressAddressRoute
  UserAddressAddAddressRoute: typeof UserAddressAddAddressRoute
  UserAddressIndexRoute: typeof UserAddressIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthenticationLoginRoute: AuthenticationLoginRoute,
  AuthenticationRegisterRoute: AuthenticationRegisterRoute,
  ProductProductIdRoute: ProductProductIdRoute,
  UserCartLazyRoute: UserCartLazyRoute,
  UserProfileLazyRoute: UserProfileLazyRoute,
  CartIndexRoute: CartIndexRoute,
  UserAddressAddressRoute: UserAddressAddressRoute,
  UserAddressAddAddressRoute: UserAddressAddAddressRoute,
  UserAddressIndexRoute: UserAddressIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/authentication/login",
        "/authentication/register",
        "/product/$productId",
        "/user/cart",
        "/user/profile",
        "/cart/",
        "/user/address/$address",
        "/user/address/add-address",
        "/user/address/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/authentication/login": {
      "filePath": "authentication/login.tsx"
    },
    "/authentication/register": {
      "filePath": "authentication/register.tsx"
    },
    "/product/$productId": {
      "filePath": "product/$productId.tsx"
    },
    "/user/cart": {
      "filePath": "user/cart.lazy.tsx"
    },
    "/user/profile": {
      "filePath": "user/profile.lazy.tsx"
    },
    "/cart/": {
      "filePath": "cart/index.jsx"
    },
    "/user/address/$address": {
      "filePath": "user/address/$address.tsx"
    },
    "/user/address/add-address": {
      "filePath": "user/address/add-address.tsx"
    },
    "/user/address/": {
      "filePath": "user/address/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
